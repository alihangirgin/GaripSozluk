// <auto-generated />
using System;
using GaripSozluk.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GaripSozluk.Data.Migrations
{
    [DbContext(typeof(GaripSozlukDbContext))]
    [Migration("20210215020544_seedDb")]
    partial class seedDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GaripSozluk.Data.Domain.BlockedUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlockedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BlockedUserId");

                    b.ToTable("BlockedUsers");
                });

            modelBuilder.Entity("GaripSozluk.Data.Domain.Entry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Entries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Entry1",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(2960),
                            PostId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Entry2",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(2975),
                            PostId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Entry3",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(2977),
                            PostId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "Entry4",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(2978),
                            PostId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Content = "Entry5",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(2979),
                            PostId = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            Content = "Entry6",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(2982),
                            PostId = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            Content = "Entry7",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(2984),
                            PostId = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            Content = "Entry8",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3015),
                            PostId = 5,
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            Content = "Entry9",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3017),
                            PostId = 5,
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            Content = "Entry10",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3019),
                            PostId = 6,
                            UserId = 1
                        },
                        new
                        {
                            Id = 11,
                            Content = "Entry11",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3020),
                            PostId = 7,
                            UserId = 1
                        },
                        new
                        {
                            Id = 12,
                            Content = "Entry12",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3021),
                            PostId = 8,
                            UserId = 1
                        },
                        new
                        {
                            Id = 13,
                            Content = "Entry13",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3023),
                            PostId = 9,
                            UserId = 1
                        },
                        new
                        {
                            Id = 14,
                            Content = "Entry14",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3024),
                            PostId = 10,
                            UserId = 1
                        },
                        new
                        {
                            Id = 15,
                            Content = "Entry15",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3025),
                            PostId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 16,
                            Content = "Entry16",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3026),
                            PostId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 17,
                            Content = "Entry17",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3028),
                            PostId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 18,
                            Content = "Entry18",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3029),
                            PostId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 19,
                            Content = "Entry19",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3031),
                            PostId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 20,
                            Content = "Entry20",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3032),
                            PostId = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 21,
                            Content = "Entry21",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3033),
                            PostId = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 22,
                            Content = "Entry22",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3034),
                            PostId = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 23,
                            Content = "Entry23",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3036),
                            PostId = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 24,
                            Content = "Entry24",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3037),
                            PostId = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 25,
                            Content = "Entry25",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3038),
                            PostId = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 26,
                            Content = "Entry26",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3039),
                            PostId = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 27,
                            Content = "Entry27",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3041),
                            PostId = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 28,
                            Content = "Entry28",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3042),
                            PostId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 29,
                            Content = "Entry29",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3043),
                            PostId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 30,
                            Content = "Entry30",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3044),
                            PostId = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 31,
                            Content = "Entry31",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3045),
                            PostId = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 32,
                            Content = "Entry32",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3047),
                            PostId = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 33,
                            Content = "Entry33",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3048),
                            PostId = 2,
                            UserId = 5
                        },
                        new
                        {
                            Id = 34,
                            Content = "Entry1",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3050),
                            PostId = 3,
                            UserId = 5
                        },
                        new
                        {
                            Id = 35,
                            Content = "Entry1",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3051),
                            PostId = 4,
                            UserId = 5
                        },
                        new
                        {
                            Id = 36,
                            Content = "Entry1",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(3052),
                            PostId = 5,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("GaripSozluk.Data.Domain.EntryRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsLiked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntryId");

                    b.HasIndex("UserId");

                    b.ToTable("EntryRatings");
                });

            modelBuilder.Entity("GaripSozluk.Data.Domain.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ClickCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            ClickCount = 0,
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(1634),
                            Title = "Post1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            ClickCount = 0,
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(1651),
                            Title = "Post2",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            ClickCount = 0,
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(1653),
                            Title = "Post3",
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            ClickCount = 0,
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(1655),
                            Title = "Post4",
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            ClickCount = 0,
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(1656),
                            Title = "Post5",
                            UserId = 4
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            ClickCount = 0,
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(1659),
                            Title = "Post6",
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            ClickCount = 0,
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(1660),
                            Title = "Post7",
                            UserId = 2
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            ClickCount = 0,
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(1662),
                            Title = "Post8",
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            ClickCount = 0,
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(1663),
                            Title = "Post9",
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            ClickCount = 0,
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(1665),
                            Title = "Post10",
                            UserId = 2
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 2,
                            ClickCount = 0,
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(1666),
                            Title = "Post11",
                            UserId = 3
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 2,
                            ClickCount = 0,
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(1667),
                            Title = "Post12",
                            UserId = 4
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 2,
                            ClickCount = 0,
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(1669),
                            Title = "Post13",
                            UserId = 3
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 2,
                            ClickCount = 0,
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(1670),
                            Title = "Post14",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("GaripSozluk.Data.Domain.PostCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PostCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 847, DateTimeKind.Local).AddTicks(8082),
                            Title = "Category1"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 848, DateTimeKind.Local).AddTicks(3593),
                            Title = "Category2"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 848, DateTimeKind.Local).AddTicks(3604),
                            Title = "Category3"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 848, DateTimeKind.Local).AddTicks(3606),
                            Title = "Category4"
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 848, DateTimeKind.Local).AddTicks(3608),
                            Title = "Category5"
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 848, DateTimeKind.Local).AddTicks(3611),
                            Title = "Book"
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 848, DateTimeKind.Local).AddTicks(3612),
                            Title = "Author"
                        });
                });

            modelBuilder.Entity("GaripSozluk.Data.Domain.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("GaripSozluk.Data.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "cdcf8fb8-1a87-4080-9ce7-ce3f35878a9a",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(6931),
                            Email = "user1@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER1@GMAIL.COM",
                            NormalizedUserName = "USER1",
                            PasswordHash = "AQAAAAEAACcQAAAAEFLTKZM3sI4Uxec9PUhygjVEQpN2LgFi/XysXpyJYzyYbZjHwxsY2hKdFARVzTGeCQ==",
                            PhoneNumber = "NULL",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "U4EFKKNM45PL6CFHSTNZODTATSLG2KVJ",
                            TwoFactorEnabled = false,
                            UserName = "User1"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "16d0a306-e24a-492d-9142-eaf10f30b783",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(7527),
                            Email = "user2@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER2@GMAIL.COM",
                            NormalizedUserName = "USER2",
                            PasswordHash = "AQAAAAEAACcQAAAAEIbs0a708a7L9uyEQLjrYyFqTwiDs223mXOIQjvY6j5p+a7Ap94aQPRxrTabRytuJw==",
                            PhoneNumber = "NULL",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "U4EFKKNM45PL6CFHSTNZODTATSLG2KVJ",
                            TwoFactorEnabled = false,
                            UserName = "User2"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "4a4f2ff3-8267-4a44-ae6a-06d03f0ce0dc",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(7551),
                            Email = "user3@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER3@GMAIL.COM",
                            NormalizedUserName = "USER3",
                            PasswordHash = "AQAAAAEAACcQAAAAEHDgNLSCdSxOIEwbC3j1lgpK1VGtfcsDjma8EMABjVakzMt0IKnLskeOXoTBUN+/CQ==",
                            PhoneNumber = "NULL",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "U4EFKKNM45PL6CFHSTNZODTATSLG2KVJ",
                            TwoFactorEnabled = false,
                            UserName = "User3"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "a73462d4-05e7-415d-bd7c-6fbad9a0d2a5",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(7566),
                            Email = "user4@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER4@GMAIL.COM",
                            NormalizedUserName = "USER4",
                            PasswordHash = "AQAAAAEAACcQAAAAEFFSlov2zoB5GBM4zJ8cykIbUmTWwnsdbHvbVmFmAvaZQ0larKX/rSBJkrdh5VZ1Dw==",
                            PhoneNumber = "NULL",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "U4EFKKNM45PL6CFHSTNZODTATSLG2KVJ",
                            TwoFactorEnabled = false,
                            UserName = "User4"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d49d3e5d-461f-4f06-860c-c6dee94decaf",
                            CreateDate = new DateTime(2021, 2, 15, 5, 5, 43, 849, DateTimeKind.Local).AddTicks(7602),
                            Email = "user5@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER5@GMAIL.COM",
                            NormalizedUserName = "USER5",
                            PasswordHash = "AQAAAAEAACcQAAAAENTXilkTA0CBlBmw09m2/w8hEoK+rErvs1/yWlppiHRPL3qa+c364B/J1ox4hi7ZDA==",
                            PhoneNumber = "NULL",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "U4EFKKNM45PL6CFHSTNZODTATSLG2KVJ",
                            TwoFactorEnabled = false,
                            UserName = "User5"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("GaripSozluk.Data.Domain.BlockedUser", b =>
                {
                    b.HasOne("GaripSozluk.Data.Domain.User", "User")
                        .WithMany("BlockedUsers")
                        .HasForeignKey("BlockedUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("GaripSozluk.Data.Domain.Entry", b =>
                {
                    b.HasOne("GaripSozluk.Data.Domain.Post", "Post")
                        .WithMany("Entries")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GaripSozluk.Data.Domain.User", "User")
                        .WithMany("Entries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("GaripSozluk.Data.Domain.EntryRating", b =>
                {
                    b.HasOne("GaripSozluk.Data.Domain.Entry", "Entry")
                        .WithMany("Ratings")
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GaripSozluk.Data.Domain.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("GaripSozluk.Data.Domain.Post", b =>
                {
                    b.HasOne("GaripSozluk.Data.Domain.PostCategory", "Category")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GaripSozluk.Data.Domain.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("GaripSozluk.Data.Domain.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("GaripSozluk.Data.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("GaripSozluk.Data.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("GaripSozluk.Data.Domain.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GaripSozluk.Data.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("GaripSozluk.Data.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
